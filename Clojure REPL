(defn coll-with-range-date-times
  "Returns a collection with the given temporal ranges."
  ([range-date-times]
   (coll-with-range-date-times range-date-times nil))
  ([range-date-times ends-at-present?]
   (collection/map->UMM-C
    {:TemporalExtents (map #(common/map->TemporalExtentType {:RangeDateTimes %
                                                             :EndsAtPresentFlag ends-at-present?})
                          range-date-times)
     :EntryTitle "et"})))
cmr.umm-spec.test.validation.helpers=>
#'cmr.umm-spec.test.validation.helpers/coll-with-range-date-times
(testing "valid temporal"
    (let [r1 (helpers/range-date-time "1999-12-30T19:00:00Z" "1999-12-30T19:00:01Z")
          r2 (helpers/range-date-time "1999-12-30T19:00:00Z" nil)
          r3 (helpers/range-date-time "1999-12-30T19:00:00Z" "1999-12-30T19:00:00Z")]
      (assert-valid (helpers/coll-with-range-date-times [[r1]]))
      (assert-valid (helpers/coll-with-range-date-times [[r2]]))
      (assert-valid (helpers/coll-with-range-date-times [[r3]]))
      (assert-valid (helpers/coll-with-range-date-times [[r1] [r2]]))
      (assert-valid (helpers/coll-with-range-date-times [[r1 r2] [r3]]))
      (assert-valid (helpers/coll-with-range-date-times [[r1 r2 r3]]))))
cmr.umm-spec.test.validation.collection=>
true
(testing "invalid temporal"
    (testing "single error"
      (let [r1 (helpers/range-date-time "1999-12-30T19:00:02Z" "1999-12-30T19:00:01Z")
            r2 (helpers/range-date-time "1999-12-30T19:00:00Z" "1999-12-30T19:00:00Z")]
        (assert-invalid
          (helpers/coll-with-range-date-times [[r1]])
          [:TemporalExtents 0 :RangeDateTimes 0]
          ["BeginningDateTime [1999-12-30T19:00:02.000Z] must be no later than EndingDateTime [1999-12-30T19:00:01.000Z]"])
        (assert-invalid
          (helpers/coll-with-range-date-times [[r2] [r1]])
          [:TemporalExtents 1 :RangeDateTimes 0]
          ["BeginningDateTime [1999-12-30T19:00:02.000Z] must be no later than EndingDateTime [1999-12-30T19:00:01.000Z]"])))

    (testing "multiple errors"
      (let [r1 (helpers/range-date-time "1999-12-30T19:00:02Z" "1999-12-30T19:00:01Z")
            r2 (helpers/range-date-time "2000-12-30T19:00:02Z" "2000-12-30T19:00:01Z")]
        (assert-multiple-invalid
          (helpers/coll-with-range-date-times [[r1 r2]])
          [{:path [:TemporalExtents 0 :RangeDateTimes 0],
            :errors
            ["BeginningDateTime [1999-12-30T19:00:02.000Z] must be no later than EndingDateTime [1999-12-30T19:00:01.000Z]"]}
           {:path [:TemporalExtents 0 :RangeDateTimes 1],
            :errors
            ["BeginningDateTime [2000-12-30T19:00:02.000Z] must be no later than EndingDateTime [2000-12-30T19:00:01.000Z]"]}])
       (assert-multiple-invalid
         (helpers/coll-with-range-date-times [[r1] [r2]])
         [{:path [:TemporalExtents 0 :RangeDateTimes 0],
           :errors
           ["BeginningDateTime [1999-12-30T19:00:02.000Z] must be no later than EndingDateTime [1999-12-30T19:00:01.000Z]"]}
          {:path [:TemporalExtents 1 :RangeDateTimes 0],
           :errors
           ["BeginningDateTime [2000-12-30T19:00:02.000Z] must be no later than EndingDateTime [2000-12-30T19:00:01.000Z]"]}]))))
cmr.umm-spec.test.validation.collection=>
true
(testing "multiple errors"
      (let [r1 (helpers/range-date-time "1999-12-30T19:00:02Z" "1999-12-30T19:00:01Z")
            r2 (helpers/range-date-time "2000-12-30T19:00:02Z" "2000-12-30T19:00:01Z")]
        (assert-multiple-invalid
          (helpers/coll-with-range-date-times [[r1 r2]])
          [{:path [:TemporalExtents 0 :RangeDateTimes 0],
            :errors
            ["BeginningDateTime [1999-12-30T19:00:02.000Z] must be no later than EndingDateTime [1999-12-30T19:00:01.000Z]"]}
           {:path [:TemporalExtents 0 :RangeDateTimes 1],
            :errors
            ["BeginningDateTime [2000-12-30T19:00:02.000Z] must be no later than EndingDateTime [2000-12-30T19:00:01.000Z]"]}])
       (assert-multiple-invalid
         (helpers/coll-with-range-date-times [[r1] [r2]])
         [{:path [:TemporalExtents 0 :RangeDateTimes 0],
           :errors
           ["BeginningDateTime [1999-12-30T19:00:02.000Z] must be no later than EndingDateTime [1999-12-30T19:00:01.000Z]"]}
          {:path [:TemporalExtents 1 :RangeDateTimes 0],
           :errors
           ["BeginningDateTime [2000-12-30T19:00:02.000Z] must be no later than EndingDateTime [2000-12-30T19:00:01.000Z]"]}])))
cmr.umm-spec.test.validation.collection=>
true
--------------------
